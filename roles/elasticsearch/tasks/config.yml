---
- name: Create data directory to pass Bootstrap Check
  file: 
    path: "{{ item }}"
    state: directory
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
  with_items: "{{ es_data_dir_list }}"
 
- name: Modify config file in /etc/default/elasticsearch
  lineinfile:
    dest: /etc/default/elasticsearch
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '.*JAVA_HOME.*', line: 'JAVA_HOME={{ es_java_home }}' }
    - { regexp: '.*CONF_DIR.*', line: 'CONF_DIR={{ es_conf_dir }}' }
    - { regexp: '.*DATA_DIR.*', line: 'DATA_DIR={{ es_data_dir }}' }
    - { regexp: '.*LOG_DIR.*', line: 'LOG_DIR={{ es_log_dir }}' }
    - { regexp: '.*PID_DIR.*', line: 'PID_DIR={{ es_pid_dir }}' }
    - { regexp: '.*ES_USER.*', line: 'ES_USER={{ es_user }}' }
    - { regexp: '.*ES_GROUP.*', line: 'ES_GROUP={{ es_group }}' }
    - { regexp: '.*MAX_OPEN_FILES.*', line: 'MAX_OPEN_FILES={{ es_max_open_files }}' }
    - { regexp: '.*ES_JAVA_OPTS.*', line: 'ES_JAVA_OPTS="{{ es_java_opts }}"' }
    - { regexp: '.*MAX_MAP_COUNT.*', line: 'MAX_MAP_COUNT={{ es_max_map_count }}' }

- name: Copy default conf file in /etc/elasticsearch/* to /disk2/elasticsearch/config/
  copy:
    src: "{{ item }}"
    dest: "{{ es_conf_dir}}"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
  with_fileglob: 
    - /etc/elasticsearch/*
    
- name: Modify configs in elasticsearch.yml
  lineinfile:
    dest: "{{es_conf_dir}}/elasticsearch.yml"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '.*cluster\.name:.*', line: 'cluster.name: {{ es_cluster_name }}' }
    - { regexp: '.*node\.name:.*', line: 'node.name: {{ ansible_hostname }}' }
    - { regexp: '.*node\.attr\.rack:.*', line: 'node.attr.rack: {{ es_rack_name }}' }
    - { regexp: '.*path\.data:.*', line: 'path.data: {{ es_data_dir }}' }    
    - { regexp: '.*path\.logs:.*', line: 'path.logs: {{ es_log_dir }}' }    
    - { regexp: '.*network\.host:.*', line: 'network.host: {{ ansible_hostname }}' }    
    - { regexp: '.*http\.port:.*', line: 'http.port: {{ es_http_port }}' }    
    - { regexp: '.*discovery\.zen\.minimum_master_nodes:.*', line: 'discovery.zen.minimum_master_nodes: {{ es_min_master_nodes }}' }    
    - { regexp: '.*discovery\.zen\.ping.\unicast\.hosts:.*', line: 'discovery.zen.ping.unicast.hosts: {{ es_unicast_hosts }}' }
 
- name: Add new configs in elasticsearch.yml
  lineinfile:
    dest: "{{es_conf_dir}}/elasticsearch.yml"
    line: "{{ item }}"
  with_items:
    - "transport.tcp.port: {{ es_transport_tcp_port }}"
    - "xpack.security.enabled: false"
    - "xpack.monitoring.enabled: true"
    - "xpack.graph.enabled: false"
    - "xpack.watcher.enabled: false"

- name: Modify log4j2.properties
  lineinfile:
    dest: "{{es_conf_dir}}/log4j2.properties"
    line: "{{ item }}"
  with_items:
    - appender.rolling.strategy.type = DefaultRolloverStrategy
    - appender.rolling.strategy.action.type = Delete
    - appender.rolling.strategy.action.basepath = ${sys:es.logs.base_path}
    - appender.rolling.strategy.action.condition.type = IfLastModified
    - appender.rolling.strategy.action.condition.age = 30D
    - appender.rolling.strategy.action.PathConditions.type = IfFileName
    - appender.rolling.strategy.action.PathConditions.glob = ${sys:es.logs.cluster_name}-*
